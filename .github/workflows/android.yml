on: [push, pull_request]

name: Android

jobs:
  ci:
    name: Compile, Build and Release
    runs-on: macos-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt

      - name: Cache Cargo
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.cargo/bin
            target/aarch64-linux-android
            target/armv7-linux-androideabi
            target/x86_64-linux-android
            target/i686-linux-android
            target/aarch64-apple-ios
            target/x86_64-apple-ios
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-android

      - name: Install Cargo Tools (cargo-make)
        uses: actions-rs/cargo@v1
        continue-on-error: true
        with:
          command: install
          args: cargo-make

      - name: Install Cargo Tools (cbindgen, v0.14.4)
        uses: actions-rs/cargo@v1
        continue-on-error: true
        with:
          command: install
          args: cbindgen --version 0.14.4

      - name: Setup Flutter
        uses: subosito/flutter-action@v1
        with:
          channel: "beta"

      - name: Run Flutter pub get
        run: flutter pub get

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Cache NDK
        id: cache-ndk
        uses: actions/cache@v2
        with:
          path: /Users/runner/Library/Android/sdk/ndk/18.1.5063045
          key: ${{ runner.os }}-cached-ndk

      - name: Install Android NDK
        if: steps.cache-ndk.outputs.cache-hit != 'true'
        run: $ANDROID_SDK_ROOT/tools/bin/sdkmanager ndk-bundle

      - name: Set Android NDK Env
        run: echo 'ANDROID_NDK_HOME=/Users/runner/Library/Android/sdk/ndk/18.1.5063045' >> $GITHUB_ENV

      - name: Install Android Targets
        run: rustup target add aarch64-linux-android armv7-linux-androideabi x86_64-linux-android i686-linux-android

      - name: Create Release (Android)
        id: create_release
        uses: ChanTsune/release-with-commit@v2.0.0
        with:
          regexp: "Release (\\d+([.]\\d+)*)\n*((\\s|\\S)+)"
          regexp_options: "us"
          release_name: "version $1"
          tag_name: "v$1"
          body: "$3"
          draft: false
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run cargo make android (arm64, Release)
        if: steps.create_release.outputs.upload_url != null
        uses: actions-rs/cargo@v1
        continue-on-error: false
        with:
          command: make
          args: android-arm --profile release

      - name: Build APK (arm64, Release)
        if: steps.create_release.outputs.upload_url != null
        run: flutter build apk --release --target-platform android-arm64

      - name: Upload Release (arm64, Release)
        if: steps.create_release.outputs.upload_url != null
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/app/outputs/flutter-apk/app-release.apk
          asset_name: edgeware-wallet-release-arm64.apk
          asset_content_type: application/octet-stream

      - name: Run cargo make android (x86_64, Release)
        if: steps.create_release.outputs.upload_url != null
        uses: actions-rs/cargo@v1
        continue-on-error: false
        with:
          command: make
          args: android-dev --profile release

      - name: Build APK (x86_64, Release)
        if: steps.create_release.outputs.upload_url != null
        run: flutter build apk --release --target-platform android-x64

      - name: Upload Release (x86_64, Release)
        if: steps.create_release.outputs.upload_url != null
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/app/outputs/flutter-apk/app-release.apk
          asset_name: edgeware-wallet-release-x86_64.apk
          asset_content_type: application/octet-stream
